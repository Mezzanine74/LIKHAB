@using LIKHAB.Areas.Islemler.Controllers;
@using LIKHAB.Models.db;

@{
    var scheduler = Html.DevExpress().Scheduler(settings => {
        settings.Name = "SchedulerRandevuVer";

        settings.CallbackRouteValues = new { Controller = "Randevu", Action = "SchedulerRandevuVerPartial" };
        settings.EditAppointmentRouteValues = new { Controller = "Randevu", Action = "SchedulerRandevuVerPartialEditAppointment" };

        //settings.ClientSideEvents.SelectionChanged = "OnSelectionChanged";

        settings.ActiveViewType = SchedulerViewType.FullWeek;
        settings.Views.DayView.Enabled = false;
        settings.Views.WorkWeekView.Enabled = false;
        settings.Views.FullWeekView.Enabled = true;
        settings.Views.WeekView.Enabled = false;
        settings.Views.MonthView.Enabled = false;
        settings.Views.TimelineView.Enabled = false;
        settings.Views.AgendaView.Enabled = false;
        settings.Views.FullWeekView.ShowWorkTimeOnly = true;

        settings.Storage.EnableReminders = false;
        settings.Storage.Appointments.Assign(RandevuControllerSchedulerRandevuVerSettings.AppointmentStorage);
        settings.Storage.Resources.Assign(RandevuControllerSchedulerRandevuVerSettings.ResourceStorage);

        settings.ClientSideEvents.BeginCallback = "SchedulerRandevuVerPartialBeginCallback";
        settings.ClientSideEvents.EndCallback = "SchedulerRandevuVerPartialEndCallback";
        settings.ClientSideEvents.AppointmentDeleting = "SchedulerRandevuVerPartialAppointmentDeletingClick";

        settings.OptionsCustomization.AllowAppointmentCreate = (bool)ViewBag.RandevuExists ? UsedAppointmentType.None : UsedAppointmentType.All;

        //settings.OptionsCustomization.AllowInplaceEditor = UsedAppointmentType.Custom;
        //settings.AllowInplaceEditor = (sender, e) =>
        //{
        //    e.Appointment.Subject = "body";
        //};

        settings.OptionsCustomization.AllowAppointmentEdit = UsedAppointmentType.Custom;
        settings.AllowAppointmentEdit = (sender, e) => {

            // onaylanmis ise not editable
            int randevuId = (int)e.Appointment.Id;

            if (LIKHAB.Models.helper.Isler.OnaylanmisMiByRandevuId(randevuId)) {
                e.Allow = false;
                return;
            }

            // randevuyu veren kullanici ise edite acik
            if (HelperClasses.UserInfo.getAdiSoyadiOfCurrentUser() == (string)e.Appointment.CustomFields["WhoCreated"])
            {
                e.Allow = true;
                return;
            }

            e.Allow = false;

        };

        settings.OptionsCustomization.AllowAppointmentDelete = UsedAppointmentType.Custom;
        settings.AllowAppointmentDelete = (sender, e) =>
        {
            // onaylanmis ise not deletable
            int randevuId = (int)e.Appointment.Id;

            if (LIKHAB.Models.helper.Isler.OnaylanmisMiByRandevuId(randevuId))
            {
                e.Allow = false;
                return;
            }

            // randevuyu veren kullanici ise delete acik
            if (HelperClasses.UserInfo.getAdiSoyadiOfCurrentUser() == (string)e.Appointment.CustomFields["WhoCreated"])
            {
                e.Allow = true;
                return;
            }

            e.Allow = false;

        };

        settings.AppointmentFormShowing = (sender, e) =>
        {
            var sch = sender as MVCxScheduler;
            if (sch != null)
                e.Container = new RandevuControllerSchedulerRandevuVerSettings.CustomAppointmentTemplateContainer(sch);
        };

        settings.PopupMenuShowing = (sched, evargs) =>
        {
            if (evargs.Menu.MenuId == SchedulerMenuItemId.AppointmentMenu)
            {
                DevExpress.Web.MenuItem statusMenu = evargs.Menu.Items.FindByName(SchedulerMenuItemId.StatusSubMenu.ToString());
                if (statusMenu != null) statusMenu.Visible = false;

                DevExpress.Web.MenuItem labelMenu = evargs.Menu.Items.FindByName(SchedulerMenuItemId.LabelSubMenu.ToString());

                for (int i = 0; i < labelMenu.Items.Count(); i++)
                {
                    labelMenu.Items[i].ClientEnabled = false;
                }
            }
        };

        settings.OptionsForms.SetAppointmentFormTemplateContent(c =>
        {
            var container = (RandevuControllerSchedulerRandevuVerSettings.CustomAppointmentTemplateContainer)c;
            LIKHAB.Models.db.Randevu modelAppointment = new LIKHAB.Models.db.Randevu()
            {
                id = container.Appointment.Id == null ? -1 : (int)container.Appointment.Id,
                Subject = container.Appointment.Subject,
                Location = container.Appointment.Location,
                StartDate = container.Appointment.Start,
                EndDate = container.Appointment.End,
                AllDay = container.Appointment.AllDay,
                Description = container.Appointment.Description,
                Type = (int)container.Appointment.Type,
                Status = (int?)container.Appointment.StatusKey,
                Label = (int?)container.Appointment.LabelKey,
            };

            ViewBag.DeleteButtonEnabled = container.CanDeleteAppointment;

            (container.ResourceDataSource as ListEditItemCollection).RemoveAt(0);
            ViewBag.ResourceDataSource = container.ResourceDataSource;
            ViewBag.StatusDataSource = container.StatusDataSource;
            ViewBag.LabelDataSource = container.LabelDataSource;
            //ViewBag.ReminderDataSource = container.ReminderDataSource;
            Html.RenderPartial("_SchedulerRandevuVerCustomFormPartial", modelAppointment);
        });

    });
    if (ViewData["SchedulerErrorText"] != null) {
        scheduler.SetErrorText((string)ViewData["SchedulerErrorText"]);
    }
}
@scheduler.Bind(ViewData["Appointments"], ViewData["Resources"]).GetHtml()

